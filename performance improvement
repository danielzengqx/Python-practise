1.6 -> by index
1.7 -> in place boolean
2.5 -> linked list add
3.3 -> “None” becomes diff value to handle corner
3.5 -> 1, handle the problem, push & pop, 2, optimized ans for solution
4.1 -> better design(performance) -> height never check back
4.2 -> using nodes and set color for each node, DFS -> for graph
4.3 -> why it does not work, copy the standard and search
4.7 -> bottom up methods

11.6 -> improve: 1, can track index and report 
     -> 2, not sure 6*6 or bigger matrix
11.7-> can do better using merge or quick sort, even counting sort

The primary focus 

checking the best method -> pick up the basic components && write better approach

Aug 20th
CH1 array and string (except 1.1)
CH2 Linked list (all)
CH3 Stack and Queues (except 3.6)
CH4 Trees and Graphs (all)

Aug 21st
checking the best method

CH5 Bit manipulation
CH8 Recursion and DP



Aug 22nd
checking the best method
CH10 Sorting and searching
CH16 Moderate



Aug 23rd
checking the best method

CH16 Moderate
CH17 Hard

